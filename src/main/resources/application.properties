########################
# Global configuration #
########################
# (pour définir un nom à l'application)
spring.application.name=apiMushroom
# Log level configuration
logging.level.root=ERROR
# pour ce qui est de notre code, on est en INFO pour avoir du détail
logging.level.com.api=INFO


##################################
# CONFIGURATION DU SERVER TOMCAT #
##################################
# Tomcat configuration (pour ne pas être sur le port par défaut 8080)
server.port=9000
# Permet de voir dans la console le port utilisé par Tomcat au démarrage
logging.level.org.springframework.boot.web.embedded.tomcat=INFO


############################
# H2 CONFIGURATION DU SGBD #
############################
# EN MEMOIRE #
spring.datasource.url=jdbc:h2:mem:mycodb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Permet de voir dans la console l'URL jdbc de la base H2
logging.level.org.springframework.boot.autoconfigure.h2=INFO


#############################################
# GENERATION DE SCHEMA AVEC SPRING DATA JPA #
#############################################
# Définir les propriétés JPA natives dans notre fichier de configuration sous le préfixe spring.jpa.properties
# Pour contrôler les commandes DDL que nous allons générer , JPA introduit l' option de configuration d' action de script
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=drop-and-create
# Pour chaque action de script spécifiée , nous devrons définir la configuration cible correspondante.
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/schema.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=src/main/resources/schema.sql
# Pour générer les commandes DDL de schéma à partir de nos modèles d'entité, nous devons inclure les configurations de source de schéma avec l' option de métadonnées sélectionnée
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata


###########################################################################
## DESACTIVER LA CREATION AUTOMATIQUE DE SCHEMAS POUR EVITER LES CONFLITS #
###########################################################################
#spring.jpa.hibernate.ddl-auto=update
# none, validate, update, create-drop.

# Active la console H2 http://localhost:9000/h2-console/
spring.h2.console.enabled=true
